import = kw_import id

rvalue = id | constval
lvalue = id
value = rvalue | lvalue
compare_operator = < | <= | > | >= | == | != | || | &&
compare_expr = value compare_operator value
operator = + | - | * | / | % | compare_operator
expr = value [ ( + | - | * | / | % ) value ]
statement = kw_if begin_parenthesis compare_expr end_parenthesis begin_scope { statement } end_scope [ kw_else kw_if begin_scope { statement } end_scope ] [ kw_else begin_scope { statement } end_scope ]
          | kw_while begin_parenthesis compare_expr end_parenthesis begin_scope { statement } end_scope
          | kw_return [ expr ] semicolon
          | kw_break semicolon
          | kw_continue semicolon
          | id = expr semicolon
funcdecl = kw_func id begin_scope { statement } end_scope
classdecl = kw_class id begin_scope { statement | funcdecl } end_scope
program = { import } { id = expr semicolon } { classdecl } { funcdecl }
